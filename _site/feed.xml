<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-02-24T11:34:11+07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">felix’s blog</title><subtitle>This blog is about my experiences in software development, I hope you can find something useful!</subtitle><entry><title type="html">Naming classes how to avoid calling everything a whatevermanager</title><link href="http://localhost:4000/naming-classes-how-to-avoid-calling-everything-a-whatevermanager/" rel="alternate" type="text/html" title="Naming classes how to avoid calling everything a whatevermanager" /><published>2018-10-27T00:00:00+07:00</published><updated>2018-10-27T00:00:00+07:00</updated><id>http://localhost:4000/naming-classes-how-to-avoid-calling-everything-a-whatevermanager</id><content type="html" xml:base="http://localhost:4000/naming-classes-how-to-avoid-calling-everything-a-whatevermanager/">&lt;p&gt;Here’s a little summary of what I learned from this question in the meantime.&lt;/p&gt;

&lt;p&gt;Try not to create new metaphors (Nanny)
Have a look at what other frameworks do
Further articles/books on this topic:&lt;/p&gt;

&lt;p&gt;What names do you find yourself prepending/appending to classes regularly?&lt;br /&gt;
What’s the best approach to naming classes?&lt;br /&gt;
Book: Design Patterns: Elements of Reusable Object-Oriented Software (Hardcover)&lt;br /&gt;
Book: Patterns of Enterprise Application Architecture (Hardcover)&lt;br /&gt;
Book: Implementation Patterns (Paperback)&lt;/p&gt;

&lt;p&gt;And a current list of name prefixes/suffixes I collected (subjectively!) from the answers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Coordinator&lt;/li&gt;
  &lt;li&gt;Builder&lt;/li&gt;
  &lt;li&gt;Writer&lt;/li&gt;
  &lt;li&gt;Reader&lt;/li&gt;
  &lt;li&gt;Handler&lt;/li&gt;
  &lt;li&gt;Container&lt;/li&gt;
  &lt;li&gt;Protocol&lt;/li&gt;
  &lt;li&gt;Target&lt;/li&gt;
  &lt;li&gt;Converter&lt;/li&gt;
  &lt;li&gt;Controller&lt;/li&gt;
  &lt;li&gt;View&lt;/li&gt;
  &lt;li&gt;Factory&lt;/li&gt;
  &lt;li&gt;Entity&lt;/li&gt;
  &lt;li&gt;Bucket&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And a good tip for the road:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Don’t get naming paralysis.
Yes, names are very important but they’re not important enough to waste huge amounts of time on.
If you can’t think up a good name in 10 minutes, move on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;source: https://stackoverflow.com/questions/1866794/naming-classes-how-to-avoid-calling-everything-a-whatevermanager&lt;/p&gt;</content><author><name></name></author><summary type="html">Here’s a little summary of what I learned from this question in the meantime. Try not to create new metaphors (Nanny) Have a look at what other frameworks do Further articles/books on this topic: What names do you find yourself prepending/appending to classes regularly? What’s the best approach to naming classes? Book: Design Patterns: Elements of Reusable Object-Oriented Software (Hardcover) Book: Patterns of Enterprise Application Architecture (Hardcover) Book: Implementation Patterns (Paperback) And a current list of name prefixes/suffixes I collected (subjectively!) from the answers: Coordinator Builder Writer Reader Handler Container Protocol Target Converter Controller View Factory Entity Bucket And a good tip for the road: Don’t get naming paralysis. Yes, names are very important but they’re not important enough to waste huge amounts of time on. If you can’t think up a good name in 10 minutes, move on. source: https://stackoverflow.com/questions/1866794/naming-classes-how-to-avoid-calling-everything-a-whatevermanager</summary></entry><entry><title type="html">Secure s3 cloudfont content with Signed Cookies and Signed URLs</title><link href="http://localhost:4000/aws/s3/sercure-s3-cloudfront/" rel="alternate" type="text/html" title="Secure s3 cloudfont content with Signed Cookies and Signed URLs" /><published>2018-10-27T00:00:00+07:00</published><updated>2018-10-27T00:00:00+07:00</updated><id>http://localhost:4000/aws/s3/sercure-s3-cloudfront</id><content type="html" xml:base="http://localhost:4000/aws/s3/sercure-s3-cloudfront/">&lt;p&gt;Use case:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Many companies that distribute content over the internet want to restrict access to documents, business data, media streams, or content that is intended for selected users, for example, users who have paid a fee&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html&quot;&gt;Source article from amazon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have two options to secure you content&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Signed URLs&lt;/li&gt;
  &lt;li&gt;Signed Cookies&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Choosing between Signed URLs and Signed Cookies &lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-choosing-signed-urls-cookies.html&quot;&gt;Signed URLs and Signed Cookies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this post I just write about signed cookies&lt;/p&gt;
&lt;h2 id=&quot;signed-cookies&quot;&gt;Signed Cookies&lt;/h2&gt;
&lt;p&gt;Basically you need to set 3 cookies like below:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront-Expires&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront-Signature&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CloudFront-Key-Pair-Id&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Set-Cookie:
Domain=optional domain name;
Path=/optional directory path;
Secure;
HttpOnly;
CloudFront-Expires=date and time in Unix time format (in seconds) and Coordinated Universal Time (UTC)

Set-Cookie:
Domain=optional domain name;
Path=/optional directory path;
Secure;
HttpOnly;
CloudFront-Signature=hashed and signed version of the policy statement

Set-Cookie:
Domain=optional domain name;
Path=/optional directory path;
Secure;
HttpOnly;
CloudFront-Key-Pair-Id=active CloudFront key pair Id for the key pair that you are using to generate the signature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;luckily-amazon-have-libraries-for-us&quot;&gt;Luckily amazon have libraries for us&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/sdk-for-go/api/service/cloudfront/sign/#CookieSigner.Sign&quot;&gt;GO&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CFPrivateDistJavaDevelopment.html&quot;&gt;Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateCFSignatureCodeAndExamples.html&quot;&gt;Others&lt;/a&gt;
Example using go library&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NewCookieSigner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keyID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;privKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// Get Signed cookies for a resource that will expire in 1 hour&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;failed to create signed cookies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// Or get Signed cookies for a resource that will expire in 1 hour&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// and set path and domain of cookies&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hour&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sign&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CookieOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Domain&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.example.com&quot;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;failed to create signed cookies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;// Server Response via http.ResponseWriter&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;x&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Where can I get &lt;code class=&quot;highlighter-rouge&quot;&gt;keyID&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;privKey&lt;/code&gt;?
You can follow this steps: &lt;a href=&quot;https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-trusted-signers.html#private-content-creating-cloudfront-key-pairs&quot;&gt;Creating CloudFront Key Pairs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;deal-with-domain&quot;&gt;Deal with domain&lt;/h3&gt;
&lt;p&gt;Default cloudfront domain look like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://xyz.cloudfront.net&lt;/code&gt;, so you &lt;code class=&quot;highlighter-rouge&quot;&gt;can not&lt;/code&gt; set cookie for that domain.
If you own the domain &lt;code class=&quot;highlighter-rouge&quot;&gt;www.yourdomain.com&lt;/code&gt; then you will need to add a &lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;xyz.cloudfront.net&lt;/code&gt;
So instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;xyz.cloudfront.net/image1.png&lt;/code&gt; now you can access from &lt;code class=&quot;highlighter-rouge&quot;&gt;yourdomain.com/image1.png&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.spacevatican.org/2015/5/1/using-cloudfront-signed-cookies/&quot;&gt;Using Cloudfront Signed Cookies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Use case: Many companies that distribute content over the internet want to restrict access to documents, business data, media streams, or content that is intended for selected users, for example, users who have paid a fee Source article from amazon You have two options to secure you content Signed URLs Signed Cookies Choosing between Signed URLs and Signed Cookies Signed URLs and Signed Cookies In this post I just write about signed cookies Signed Cookies Basically you need to set 3 cookies like below: CloudFront-Expires CloudFront-Signature CloudFront-Key-Pair-Id Example: Set-Cookie: Domain=optional domain name; Path=/optional directory path; Secure; HttpOnly; CloudFront-Expires=date and time in Unix time format (in seconds) and Coordinated Universal Time (UTC) Set-Cookie: Domain=optional domain name; Path=/optional directory path; Secure; HttpOnly; CloudFront-Signature=hashed and signed version of the policy statement Set-Cookie: Domain=optional domain name; Path=/optional directory path; Secure; HttpOnly; CloudFront-Key-Pair-Id=active CloudFront key pair Id for the key pair that you are using to generate the signature Luckily amazon have libraries for us GO Java Others Example using go library s := sign.NewCookieSigner(keyID, privKey) // Get Signed cookies for a resource that will expire in 1 hour cookies, err := s.Sign(&quot;*&quot;, time.Now().Add(1 * time.Hour)) if err != nil { fmt.Println(&quot;failed to create signed cookies&quot;, err) return } // Or get Signed cookies for a resource that will expire in 1 hour // and set path and domain of cookies cookies, err := s.Sign(&quot;*&quot;, time.Now().Add(1 * time.Hour), func(o *sign.CookieOptions) { o.Path = &quot;/&quot; o.Domain = &quot;.example.com&quot; }) if err != nil { fmt.Println(&quot;failed to create signed cookies&quot;, err) return } // Server Response via http.ResponseWriter for _, c := range cookies { http.SetCookie(w, c) } Where can I get keyID and privKey? You can follow this steps: Creating CloudFront Key Pairs Deal with domain Default cloudfront domain look like this: http://xyz.cloudfront.net, so you can not set cookie for that domain. If you own the domain www.yourdomain.com then you will need to add a CNAME to xyz.cloudfront.net So instead of xyz.cloudfront.net/image1.png now you can access from yourdomain.com/image1.png References Using Cloudfront Signed Cookies</summary></entry><entry><title type="html">Git Rebase, when to use it?</title><link href="http://localhost:4000/git/git-rebase/" rel="alternate" type="text/html" title="Git Rebase, when to use it?" /><published>2018-09-13T00:00:00+07:00</published><updated>2018-09-13T00:00:00+07:00</updated><id>http://localhost:4000/git/git-rebase</id><content type="html" xml:base="http://localhost:4000/git/git-rebase/">&lt;h2 id=&quot;definition&quot;&gt;Definition&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;git rebase in its simplest form is a command which will merge another branch
into the branch where you are currently working,
and move all of the local commits that are ahead of the rebased branch to the top of the history
on that branch.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;the-golden-rule-of-rebasing&quot;&gt;The Golden Rule of Rebasing&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Once you understand what rebasing is, the most important thing to learn is when not to do it.
The golden rule of git rebase is to &lt;em&gt;NEVER&lt;/em&gt; use it on public branches.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So you should alway run git commant like this&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout feature-xxx
git rebase master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;source:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/merging-vs-rebasing&quot;&gt;Merging vs Rebasing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hackernoon.com/git-merge-vs-rebase-whats-the-diff-76413c117333&quot;&gt;Git Merge vs. Rebase: What’s the Diff?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nathanleclaire.com/blog/2014/09/14/dont-be-scared-of-git-rebase&quot;&gt;Don’t Be Scare Of Git Merge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Definition git rebase in its simplest form is a command which will merge another branch into the branch where you are currently working, and move all of the local commits that are ahead of the rebased branch to the top of the history on that branch. The Golden Rule of Rebasing Once you understand what rebasing is, the most important thing to learn is when not to do it. The golden rule of git rebase is to NEVER use it on public branches. So you should alway run git commant like this git checkout feature-xxx git rebase master source: Merging vs Rebasing Git Merge vs. Rebase: What’s the Diff? Don’t Be Scare Of Git Merge</summary></entry><entry><title type="html">Learn English Resources</title><link href="http://localhost:4000/english/learn-english-resources/" rel="alternate" type="text/html" title="Learn English Resources" /><published>2018-04-18T00:00:00+07:00</published><updated>2018-04-18T00:00:00+07:00</updated><id>http://localhost:4000/english/learn-english-resources</id><content type="html" xml:base="http://localhost:4000/english/learn-english-resources/">&lt;ul&gt;
  &lt;li&gt;original post: https://vozforums.com/showthread.php?t=6129889&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;english-podcast&quot;&gt;English Podcast&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;https://softwareengineeringdaily.com/
    &lt;blockquote&gt;
      &lt;p&gt;I like speaker voice, it’s also have transcript for you&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;vocabulary&quot;&gt;Vocabulary&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Anki is great fashcard app for you to learn vocabulary https://apps.ankiweb.net/&lt;/li&gt;
  &lt;li&gt;Doulingo  https://www.duolingo.com/&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">original post: https://vozforums.com/showthread.php?t=6129889 English Podcast https://softwareengineeringdaily.com/ I like speaker voice, it’s also have transcript for you Vocabulary Anki is great fashcard app for you to learn vocabulary https://apps.ankiweb.net/ Doulingo https://www.duolingo.com/</summary></entry><entry><title type="html">Productivity tools</title><link href="http://localhost:4000/productivity/productivity-tools/" rel="alternate" type="text/html" title="Productivity tools" /><published>2017-12-30T00:00:00+07:00</published><updated>2017-12-30T00:00:00+07:00</updated><id>http://localhost:4000/productivity/productivity-tools</id><content type="html" xml:base="http://localhost:4000/productivity/productivity-tools/">&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://trello.com&quot;&gt;Trello&lt;/a&gt; for tasks management&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pomelloapp.com&quot;&gt;Pomello App&lt;/a&gt; Pomello turns your Trello cards into Pomodoro® tasks.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/andreyvit/2921703&quot;&gt;Tmux cheatsheet&lt;/a&gt; Tmux cheatsheet&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">Trello for tasks management Pomello App Pomello turns your Trello cards into Pomodoro® tasks. Tmux cheatsheet Tmux cheatsheet</summary></entry></feed>